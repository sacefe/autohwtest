[APP]
VERSION = polygonShift-v003.2023-08-01-2023
# input args and constants
HOST= 172.168.1.10
PORT= 8001
; for infinite loop write -1 or the finite number of registers reads
POLYGONDELAYREADS= -1
# attempts to try to connect to lidar
RETRY_ATTEMPTS = 3
# Interval in seconds applies to the time the data will be moved to a final list (0 it will move one set of register each time)
DATAPROCESSORINTERVAL = 2.0
# Interval in seconds applies to lidar read register batch (0 default it will read one set of register each time)
READREGINTERVAL = 0.5
#  time out to try to connect socket to Lidar
SOCKET_TIMEOUT= 3 
LOOP_TIMEOUT= 4
AUTOSAVE= True        
FILENAMEBASE_LIDAR_REGS= polygonDelayReport_.csv
FILENAMEBASE_LIDAR_CHARTS= polygonDelayReport_.png
FILENAME_LOG=  lidar.log
FILEROWS= 100000
FILENAMEINDEXBASE= FileIndex_.csv
FILEINDEXCOLS= ["index", "filename", "from", "to", "dirty"]
# True destroy all recorded data
OVERWRITE= True

[DIR]
#paths
UTILSPATHBASE= utils
RESULTPATHBASE= results
LOGSPATHBASE= logs


[REG]
# Contant to convert FPGA register Hex reading to nanoseconds
REGFPGA_TO_NS=[8.0,1000.0]
# RPM Polygon propagation delay against Hall sensor
REGPOLYDELAY= 0x330   
 # Simple Moving Sum average of RMP propagation delay against Hall sensor
REGSMSPOLYDELAY= 0x334
# Sample Average (SA)
REGSA= 0x320
# Simple Moving Sum of sample Average (SMS)
REGSMSSA=  0x324 
# It is rate for the Sample Average (SA 0x320): default 256, valid values are 128,256,512,1024 (0x80, 0x100, 0x200, 0x400)      
REGSARATE=  0x328
# It is rate for moving average: default 256, valid values are 32,64,128,256  (0x20, 0x40, 0x80, 0x100)
REGSMARATE= 0x32C
#read CPU temperature return
REGTEMPCPU = cpu_temperature
# Notes:  SMA/Clk (Simple moving average of the Clk count). You need to divide reg 0x334 (SMS) by the value in reg 0x32C
#         SMA/SA (Simple moving average of the Sampling Average). You need to divide reg 0x324 (SMS) by the value in reg 0x32C
#         Best sampling SA '0x328': 0x80  and SMA '0x32C' : 0x40 
SARATE= 0x80
SMARATE= 0x40

[KALMAN]
# Register to apply Kalman filter
KALMANFILTER_1= 0x330  
KALMANFILTER_2= 0x320 
# Time between Filter Steps 
DT= 0.01
# Measurement Noise Covariance R  10.0**2 = 10^2 = 100
RA= 100.0
# Seasonal variations
SV= 8.8

[CHARTS]
# Chart plot attributes Dictionaries
# Apply to DataFrame creation and Charts refresh in secs
REFRESHCHARTTIME= 0.5
#Grid rows, cols
CHARTGRID = {"rows":"3","cols":"1","figsize":[9.2,9.2]}
CHART_TEMPERATURE= {"xlabel":"minutes","ylabel":"temperature (°C)","title":"cpu temperature","yaxis":[-40,120],
                    "yaxis2":[-40,120],"faceColor":"aliceblue","fontsize":"10","hide_labels":"NO","nbins":"10"}
CHART_POLYGONDELAY4800 = {"xlabel":"minutes", "ylabel":"polygon delay (us)","title":"delay and Kalman Filter","yaxis":[788.5,791.5],
                        "yaxis2":[784,794],"faceColor": "aliceblue","fontsize":"10","hide_labels":"NO","nbins":"10"}
CHART_POLYGONDELAY5400 = {"xlabel":"minutes", "ylabel":"polygon delay (us)","title":"delay and Kalman Filter","yaxis":[646.0,649.0],
                        "yaxis2":[642,650],"faceColor": "aliceblue","fontsize":"10","hide_labels":"NO","nbins":"10"}
CHART_SHIFTINGANGLE = {"xlabel":"minutes","ylabel":"shifting ( °deg)","title":"horizintal angle","yaxis":[2.20,2.50],"yaxis":[2.20,2.50],
                       "faceColor":"aliceblue","fontsize":"10","hide_labels":"NO","nbins":"10"}

[STE]
# Machine State 
MSNAME= mStates
NODES=["FALCON","RECORDER", "REPORTER","SHIFTER"]
STATES= ["INIT", "RUN","STOP","QUIT"]

[REPORT]
REFRESHTIME= 0.5
FILENAME_REPORT= polygonDelayReport

[PC]
FILENAMEBASE_PC= pointCloud_.csv
GET_PC_CSV= --lidar-ip 172.168.1.10  --lidar-udp-port 8010  --frame-start 1  --frame-number 20  --output-filename
GET_PC_CSV1= --lidar-ip 172.168.1.10  --lidar-udp-port 8010  --use-tcp  --lidar-mode 3  --frame-start 0  --frame-number 5  --output-filename
GET_PC_CSV0= ["--lidar-ip","172.168.1.10","--lidar-udp-port","8010","--use-tcp", "--lidar-mode", "7", "--frame-start", "0", "--frame-number", "20","--output-filename"]
APP_PCD= ./get_pcd
APP_PCD_2.9.0= ./get_pcd_sdk_290_rc22
APP_PCD_p2.9.1= ./get_pcd_plutoSdk_2.9.1